IF (PSRDADACPP_INCLUDE_DIR)
    SET(PSRDADA_INC_DIR ${PSRDADACPP_INCLUDE_DIR})
    UNSET(PSRDADACPP_INCLUDE_DIR)
ENDIF (PSRDADACPP_INCLUDE_DIR)

FIND_PATH(PSRDADACPP_INCLUDE_DIR dada_db.hpp
    PATHS ${PSRDADA_INC_DIR}
    ${PSRDADACPP_INSTALL_DIR}/include
    /usr/local/include
    /usr/include )
message("Found ${PSRDADACPP_INCLUDE_DIR} : ${PSRDADACPP_INSTALL_DIR}")

SET(PSRDADACPP_NAMES psrdada_cpp)
FOREACH( lib ${PSRDADACPP_NAMES} )
    FIND_LIBRARY(PSRDADACPP_LIBRARY_${lib}
        NAMES ${lib}
        PATHS ${PSRDADACPP_LIBRARY_DIR} ${PSRDADACPP_INSTALL_DIR} ${PSRDADACPP_INSTALL_DIR}/lib /usr/local/lib /usr/lib
        )
    LIST(APPEND PSRDADACPP_LIBRARIES ${PSRDADACPP_LIBRARY_${lib}})
ENDFOREACH(lib)
message("PSRDADACPP lib ${PSRDADACPP_LIBRARIES}  : ${PSRDADACPP_INSTALL_DIR}")
    # handle the QUIETLY and REQUIRED arguments and set PSRDADACPP_FOUND to TRUE if.
    # all listed variables are TRUE
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(PSRDADACPP DEFAULT_MSG PSRDADACPP_LIBRARIES PSRDADACPP_INCLUDE_DIR)

IF(NOT PSRDADACPP_FOUND)
    SET( PSRDADACPP_LIBRARIES )
    SET( PSRDADACPP_TEST_LIBRARIES )
ELSE(NOT PSRDADACPP_FOUND)
    # -- add dependecies
    LIST(APPEND PSRDADACPP_LIBRARIES ${PSRDADA_LIBRARIES})
ENDIF(NOT PSRDADACPP_FOUND)

LIST(APPEND PSRDADACPP_INCLUDE_DIR "${PSRDADACPP_INCLUDE_DIR}${PSRDADA_INCLUDE_DIR}")

MARK_AS_ADVANCED(PSRDADACPP_LIBRARIES PSRDADACPP_TEST_LIBRARIES PSRDADACPP_INCLUDE_DIR)
